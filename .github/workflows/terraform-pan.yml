name: "TF_Plan"

on:
  workflow_call:
    inputs:
      path:
        description: "Terraform Root Path"
        required: true
        type: string
      tf_version:
        description: 'Terraform Version. e.g: 1.3.0 Default=latest.'
        required: false
        type: string
        default: latest
      tf_vars_file:
        description: 'Terraform TFVARS file name.'
        required: true
        type: string
      enable_TFSEC:
        description: 'Enables TFSEC IaC scans and code quality checks on Terraform configurations'
        required: false
        type: boolean
        default: false
      gcp_backend_bucket:
        description: 'GCP Storage bucket name to store terraform state file.'
        required: true
        type: string
      gcp_backend_bucket_prefix:
        description: 'GCP Storage bucket folder name to store terraform state file.'
        required: true
        type: string
      # environment:
      #   description: 'manual approvals in GitHub Actions with the Environments.'
      #   required: true
      #   type: string

jobs:
  build-plan:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    # environment: ${{ inputs.environment }}
    
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.path }}

    env:
      bucket_name: ${{ inputs.gcp_backend_bucket }}
      bucket_prefix: ${{ inputs.gcp_backend_bucket_prefix }}
      TF_VARS: ${{ inputs.tf_vars_file }}
      PROJECT_ID: "nomadic-rush-408023"
      PROJECT_NO: "428136795394"
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        # create_credentials_file: 'true'
        workload_identity_provider: 'projects/${{env.PROJECT_NO}}/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
        service_account: 'gcp-workload-identity@${{env.PROJECT_ID}}.iam.gserviceaccount.com'

    - name: tfsec
      uses: aquasecurity/tfsec-action@v1.0.0
      with:
        version: latest
        soft_fail: true 

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.tf_version }}
     
    - name: Terraform Init
      run: terraform init --backend-config="bucket=$bucket_name" --backend-config="prefix=$bucket_prefix" 
      
    - name: Terraform Validate
      run: terraform validate 
      
    - name: Terraform Plan
      id: plan
      run: terraform plan --var-file=$TF_VARS --out=plan.tfplan
      continue-on-error: true
     
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Compress TF Plan artifact
      run: zip -r ${{ inputs.gcp_backend_bucket_prefix }}.zip ./*

    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.3
      with:
        name: "${{ inputs.gcp_backend_bucket_prefix }}"
        path: "${{ inputs.path }}/${{ inputs.gcp_backend_bucket_prefix }}.zip"
        retention-days: 5
